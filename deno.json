{
  "lock": false,
  "tasks": {
    "test": "deno test",
    "dev": "deno run -A npm:concurrently 'deno task build:main --watch' 'deno task build:worker --watch' 'deno task build:style --watch' 'deno task build:static --watch' 'deno task serve'",
    "build": "deno task build:main && deno task build:worker && deno task build:style && deno task build:static && deno -A npm:replace BUILD_DATE `deno -A npm:date-now-cli --format=yyyy.MM.dd` out/index.html",
    "build:main": "deno bundle --platform browser -o out/main.js game/main.ts",
    "build:worker": "deno bundle --platform browser -o out/canvas-worker.js game/canvas-worker.ts",
    "build:style": "deno run -A npm:tailwindcss@3 -o ./out/style.css",
    "build:static": "deno run -A npm:cpx2 'static/**/*' out",
    "clear-spawns": "deno -A tools/modify_map_clear_spawns.ts block_0.0 block_-200.0 block_0.-200 block_-200.-200 block_-200.200 block_0.200 block_not_found",
    "add-spawns": "deno -A tools/modify_map_add_spawns_randomly.ts block_0.0 block_-200.0 block_0.-200 block_-200.-200 block_-200.200 block_0.200 block_not_found",
    "dist": "deno run -A npm:cpx2 'out/**' dist",
    "serve": "deno run -A jsr:@std/http/file-server out -p 8000",
    "update-editor": "deno task --cwd editor update-package"
  },
  "compilerOptions": {
    "lib": ["deno.ns", "esnext", "dom", "dom.iterable"]
  },
  "imports": {
    "@b-fuze/deno-dom": "jsr:@b-fuze/deno-dom@^0.1.47",
    "@kt3k/cell": "jsr:@kt3k/cell@^0.7.6",
    "@kt3k/gameloop": "jsr:@kt3k/gameloop@^2.0.1",
    "@kt3k/weak-value-map": "jsr:@kt3k/weak-value-map@^0.1.2",
    "@std/assert": "jsr:@std/assert@^1.0.0",
    "@std/cli": "jsr:@std/cli@^1.0.21",
    "seedrandom": "npm:seedrandom@^3.0.5",
    "tailwindcss": "npm:tailwindcss@3"
  },
  "fmt": {
    "semiColons": false
  }
}
